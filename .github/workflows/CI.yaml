name: Build & Publish Helm Chart to Pages

on:
  push:
    branches: [ "main" ]
    tags:     [ "v*" ]   # opcional: también al crear tags
  workflow_dispatch: {}

env:
  GH_USER: Ritatrcr
  CHART_REPO: helm-chart                  # repo destino (Pages)
  MANIFESTS_REPO: manifiestos-delivery-app
  CHART_PATH: charts/pedido-app           # ruta del chart dentro de MANIFESTS_REPO
  PAGES_URL: https://Ritatrcr.github.io/helm-chart

jobs:
  publish-helm:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout (delivery-app)
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.15.2

      - name: Install yq (for yaml edits)
        uses: mikefarah/yq@v4.44.3

      # === Opcional: calcula una versión para el chart
      #     - si hay tag vX.Y.Z -> usa eso; si no, usa fecha+shortsha
      - name: Compute chart version
        id: ver
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" && "${GITHUB_REF_NAME}" =~ ^v[0-9]+(\.[0-9]+)*$ ]]; then
            echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT
          else
            echo "version=$(date +%Y.%m.%d)-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi
          echo "shortsha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      # === Clona el repo con el chart fuente (manifiestos-delivery-app)
      - name: Checkout manifests repo (read/write)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GH_USER }}/${{ env.MANIFESTS_REPO }}
          path: manifests
          token: ${{ secrets.GH_PAT }}

      # === (Opcional) Actualiza image.tag en values si quieres propagar el build
      # y version del chart (Chart.yaml)
      - name: Bump chart version and image tag
        working-directory: manifests/${{ env.CHART_PATH }}
        run: |
          # version del chart
          yq -i '.version = "${{ steps.ver.outputs.version }}"' Chart.yaml

          # si tus values tienen esta forma, actualízalos (ajusta claves si difiere)
          if [ -f values.yaml ]; then
            yq -i '.app.image.tag = "${{ steps.ver.outputs.shortsha }}"' values.yaml || true
          fi
          if [ -f values-dev.yaml ]; then
            yq -i '.app.image.tag = "${{ steps.ver.outputs.shortsha }}"' values-dev.yaml || true
          fi
          if [ -f values-prod.yaml ]; then
            yq -i '.app.image.tag = "${{ steps.ver.outputs.shortsha }}"' values-prod.yaml || true
          fi

      # === Resolve chart dependencies
      - name: Helm dependency update
        working-directory: manifests/${{ env.CHART_PATH }}
        run: helm repo add bitnami https://charts.bitnami.com/bitnami && helm dependency update

      # === Empaqueta el chart (.tgz) en un directorio temporal
      - name: Package chart
        run: |
          mkdir -p packaged
          helm package "manifests/${{ env.CHART_PATH }}" -d packaged
          ls -l packaged

      # === Clona el repo Pages (helm-chart) en rama gh-pages
      - name: Checkout helm-chart (gh-pages)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GH_USER }}/${{ env.CHART_REPO }}
          path: charts-publish
          token: ${{ secrets.GH_PAT }}
          ref: gh-pages

      # Si la rama gh-pages no existe, créala como huérfana
      - name: Ensure gh-pages branch
        working-directory: charts-publish
        run: |
          git rev-parse --verify gh-pages >/dev/null 2>&1 || {
            git checkout --orphan gh-pages
            rm -rf .
            echo "# Helm Chart Repo" > README.md
            touch .nojekyll
            git add .
            git -c user.name="github-actions" -c user.email="actions@github.com" commit -m "init gh-pages"
          }
          touch .nojekyll

      # === Copia el .tgz y regenera/mergea index.yaml
      - name: Move tgz & update index.yaml
        run: |
          cp -v packaged/*.tgz charts-publish/
          cd charts-publish
          helm repo index . --url "${{ env.PAGES_URL }}" --merge index.yaml || helm repo index . --url "${{ env.PAGES_URL }}"
          git add .
          git -c user.name="github-actions" -c user.email="actions@github.com" commit -m "Publish chart ${{ steps.ver.outputs.version }}" || echo "No changes"

      - name: Push to gh-pages
        working-directory: charts-publish
        run: |
          git push origin gh-pages
